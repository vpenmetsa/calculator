#default jtest settings

# === LICENSE ===

# === LOCAL LICENSE ===
# Enables local license - be sure to specify password.
#jtest.license.use_network=false

# Specifies password for the local license. 
#jtest.license.local.password=PARASOFT_585ED697570AB7874F87B44FEC88E5CA701B284347211C33834E510A6FE75BE5AF48981E2E80538BD1C151D7370B5D432E90528A2A8EA0736D3C7E04430059E1_8934E27F65867CAB2B4349777039497BE4E9919829097871FD5935C98E6E59118A178E0AB8E4AA393111485F317F0A0B078BA7E65708C1393910FEBD13CDF05F

# === NETWORK LICENSE ===
# Enables network license - be sure to configure DTP server settings.
#jtest.license.use_network=true

# Specifies whether network license will be retrieved from:
# dtp: DTP license service - "file count" license
# ls: License Server - "floating" or "machine locked" license
#jtest.license.network.type=ls

# Specifies type of the network license.
#jtest.license.network.edition=server_compliance_edition

# Enables specific list of license features
#jtest.license.network.edition=custom_edition
#jtest.license.custom_edition_features=Jtest, Static Analysis, Flow Analysis, OWASP Rules, CWE Rules, PCI DSS Rules, Security Rules, Automation, Desktop Command Line, DTP Publish, Coverage, Unit Test, Unit Test Bulk Creation, Unit Test Tier 1, Unit Test Tier 2, Unit Test Tier 3, Unit Test Tier 4, Unit Test Spring Framework, Change Based Testing


# === DTP SERVER SETTINGS ===

# Specifies host name of the DTP server.
#dtp.server=localhost

# Specifies port number of the DTP server.
# Commonly used values are 443 and 8443.
#dtp.port=8443

# Specifies user name for DTP server authentication.
#dtp.user=admin

# Specifies password for DTP server authentication - use jtestcli -encodepass <PASSWORD> to encode the password, if needed.
#dtp.password=admin

# Specifies name of the DTP project - this settings is optional. 
dtp.project=Calculator


# Enables sharing data using Team Server - be sure to configure DTP server settings. 
#dtp.share.enabled=true

# Enables using common Parasoft Test settings stored on the DTP server. 
#dtp.autoconfig=true


# === CONFIGURATION ===

# Specifies default test configuration for the analysis.
# Used when -config switch is not specified in the command line.
# jtest.configuration=builtin://Recommended Rules


# === REPORTING ===

# Enables reporting test results to DTP server - be sure to configure DTP server settings.
#report.dtp.publish=true

# Specifies a build identifier used to label results. It may be unique for each build
# but may also label more than one test sessions that were executed during a specified build.
#build.id=${dtp_project}

# Specifies a tag which represents an unique identifier for the run, used to distinguish it from similar runs.
# It could be constructed as minimal combination of following variables that will make it unique or specified manually.
# e.g. ${config_name}-${project_module}-${scontrol_branch}-${exec_env}
session.tag=${config_name}-${project_module}-${scontrol_branch}-${exec_env}

# Specifies a set of tags that will be used to create coverage images in DTP server.
# Coverage images allow you to track different types of coverage, such as coverage for unit, functional, manual tests and others.
# There is a set of predefined tags that will be automatically recognized by DTP, see the examples below.
# You can also specify other tags that will be used to create coverage images.
#report.coverage.images=${dtp_project}
#report.coverage.images=${dtp_project};${dtp_project}_Unit Test
#report.coverage.images=${dtp_project};${dtp_project}_Functional Test
#report.coverage.images=${dtp_project};${dtp_project}_Manual Test

# === HTML / PDF REPORTS ===

# Determines whether the report includes an overview of the number and type of tasks assigned to each team member. 
#report.authors_details=true

# Determines whether the report includes an overview of the files that were checked or tests executed during testing.
#report.contexts_details=true

# Specifies whether the report shows requirements, defects, tasks, and feature requests that are associated with a test.
#report.associations=true

# === EMAILS ===

# Enables reporting test results by e-mail.
#report.mail.enabled=true

# Specifies mail server.
#report.mail.server=[server]

# Specifies mail domain.
#report.mail.domain=[domain]

# Specifies default sender of the e-mails.
#report.mail.from=[email|user_name] 

# Specifies default subject of the e-mails. 
#report.mail.subject=[subject]

# === SCOPE AND AUTHORSHIP ===

# Enables code authorship computation, based on a data from a supported SCM system.
scope.scontrol=true

# Enables source control integration on DTP server:
#    filtering by branches, viewing revisions, browsing code on the DTP server.
# Enables paths for locations, revision, branches and comments for quality tasks.
#    off: no information is reported
#    min: repositories, file paths and revisions are reported
#    full: also task revisions and comments are reported
report.scontrol=full

# Use jtestcli -encodepass <PASSWORD> to encode the passwords of source control users.

# === SUBVERSION ===
#scontrol.rep1.type=svn
#scontrol.rep1.svn.url=https\://foo.bar.com/svn
#scontrol.rep1.svn.login=[user name]
#scontrol.rep1.svn.password=[password]
#scontrol.svn.exec=C\:\\Program Files\\svn\\bin\\svn.exe

# === GIT ===
scontrol.rep1.type=git
scontrol.rep1.git.url=https://github.com/vpenmetsa/calculator.git
scontrol.rep1.git.branch=master
scontrol.rep1.git.workspace=C:\Users\vpenmetsa\git\calculator
scontrol.git.exec=C\:\\Program Files (x86)\\Git\\bin\\git.exe

# === TEAM FOUNDATION SERVER ===
#scontrol.rep1.type=tfs
#scontrol.rep1.tfs.url=http\://foo.bar.com\:8080/tfs
#scontrol.rep1.tfs.login=[user name]
#scontrol.rep1.tfs.password=[password]

# === CVS ===
#scontrol.rep1.type=cvs
#scontrol.rep1.cvs.root=\:pserver\:[user name]@foo.bar.com\:/home/repo/cvs
#scontrol.rep1.cvs.pass=[password]

# See manual for configuring other types of source-control systems.

# === CONSOLE VERBOSITY LEVEL ===
# Increases console verbosity level to high.
console.verbosity.level=high

# Prints the current settings including the origin of properties files 
#jtest.showsettings=true

# === TECHNICAL SUPPORT PACKAGE ===

# Enables technical support data collecting, it automatically enable verbose logging.
#techsupport.enabled=true

# Enables automatic creation of technical support during application shut down.
#techsupport.create.on.exit=true

# Specifies the technical support package location. Escape backslashes to provide the path.
#techsupport.archive.location=[output location]

# Specifies data which should be included into technical support package
#jtest.techsupport.include.testoutcomes=true
#jtest.techsupport.include.report=true
#jtest.techsupport.include.coverage=true
#jtest.techsupport.include.metrics=true
#jtest.techsupport.include.database=true
